#!perl

use strict;
use warnings;

unless (@ARGV >= 2) {
    die "rename-swap: Please specify at least 2 files\n";
}

# make sure all files exist first
for (@ARGV) {
    die "rename-swap: File '$_' doesn't exist\n" unless -e $_;
}

# create a temporary name that does not exist
my $tmp;
while (1) {
    $tmp = sprintf "rename-swap-tmp-%d", rand()*1_000_000;
    last unless -e $tmp;
}

# start the swapping!
for (my $i=0; $i < int(@ARGV/2); $i++) {
    my $f1 = $ARGV[$i];
    my $f2 = $ARGV[$#ARGV - $i];
    if ($f1 eq $f2) {
        print "Skipping swapping $f1 -> $f2 (same file)\n";
        next;
    }
    rename $f1, $tmp or die "rename-swap: Can't rename $f1 -> $tmp: $!\n";
    rename $f2, $f1  or die "rename-swap: Can't rename $f2 -> $f1: $!\n";
    rename $tmp, $f2 or die "rename-swap: Can't rename $tmp -> $f2: $!\n";
    print "Swapping $f1 <-> $f2\n";
}

# ABSTRACT: Swap filenames

=head1 SYNOPSIS

Swapping two files:

 % rename-swap f1 f2

f1 will be renamed to f2 while f2 will be renamed to f1.

Swapping three files:

 % rename-swap f1 f2 f3

f1 will be renamed to f3, f3 will be renamed to f1, while f2 will be unchanged.

Swapping four files:

 % rename-swap f1 f2 f3 f4

f1 will be renamed to f4, f4 will be renamed to f1, f2 will be renamed to f3, f3
will be renamed to f2.


=head1 DESCRIPTION

WARNING: Be careful when running this script. This script does not support
dry-run (simulation) mode nor undo. It uses C<rename()> so it does not support
moving files across filesystems; it's best to specify only files in the same
directory.
